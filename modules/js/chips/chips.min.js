/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.10.1-rc1
 */
!function(t,e,n){"use strict";function i(t){function n(n,i){return n.append(l),function(n,i,r,o){i.addClass("md-chip"),t(i),o&&e.element(i[0].querySelector(".md-chip-content")).on("blur",function(){o.selectedChip=-1})}}return{restrict:"E",require:"^?mdChips",compile:n}}function r(t){function e(e,n,i,r){n.on("click",function(t){e.$apply(function(){r.removeChip(e.$$replacedScope.$index)})}),t(function(){n.attr({tabindex:-1,ariaHidden:!0}),n.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:e}}function o(t,e){function n(e,n,i){var r=e.$parent.$mdChipsCtrl,o=r.parent.$new(!1,r.parent);o.$$replacedScope=e,o.$chip=e.$chip,o.$mdChipsCtrl=r,n.html(r.$scope.$eval(i.mdChipTransclude)),t(n.contents())(o)}return{restrict:"EA",terminal:!0,link:n,scope:!1}}function s(t,e,n,i,r){this.$timeout=r,this.$mdConstant=e,this.$scope=t,this.parent=t.$parent,this.$log=n,this.$element=i,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useMdOnAppend=!1}function c(t,e,n,i,r){function o(o,s){function c(t){if(s.ngModel){var e=p[0].querySelector(t);return e&&e.outerHTML}}var p=s.$mdUserTemplate;s.$mdUserTemplate=null;var d=c("md-chips>*[md-chip-remove]")||u,l=c("md-chips>md-chip-template")||m,h=c("md-chips>md-autocomplete")||c("md-chips>input")||a,C=p.find("md-chip");return p[0].querySelector("md-chip-template>*[md-chip-remove]")&&i.warn("invalid placement of md-chip-remove within md-chip-template."),function(i,o,c,p){e.initOptionalProperties(i,s),t(o);var m=p[0];if(m.chipContentsTemplate=l,m.chipRemoveTemplate=d,m.chipInputTemplate=h,o.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){m.onFocus()}),s.ngModel&&(m.configureNgModel(o.controller("ngModel")),c.mdOnAppend&&m.useMdOnAppendExpression(),h!=a&&r(function(){0===h.indexOf("<md-autocomplete")&&m.configureAutocomplete(o.find("md-autocomplete").controller("mdAutocomplete")),m.configureUserInput(o.find("input"))})),C.length>0){var u=n(C)(i.$parent);r(function(){o.find("md-chips-wrap").prepend(u)})}}}return{template:function(t,e){e.$mdUserTemplate=t.clone();return h},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:o,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",mdOnAppend:"&",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}function p(){this.selectedItem=null,this.searchText=""}function d(t,e){function n(n,i){return function(n,r,o,s){e.initOptionalProperties(n,i),t(r),r.attr("tabindex","-1")}}return{template:function(t,e){return C},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:n,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch"}}}e.module("material.components.chips",["material.core","material.components.autocomplete"]),e.module("material.components.chips").directive("mdChip",i);var l='\r\n    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">\r\n      {{$mdChipsCtrl.deleteHint}}\r\n    </span>';i.$inject=["$mdTheming"],e.module("material.components.chips").directive("mdChipRemove",r),r.$inject=["$timeout"],e.module("material.components.chips").directive("mdChipTransclude",o),o.$inject=["$compile","$mdUtil"],e.module("material.components.chips").controller("MdChipsCtrl",s),s.$inject=["$scope","$mdConstant","$log","$element","$timeout"],s.prototype.inputKeydown=function(t){var e=this.getChipBuffer();switch(t.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.$scope.requireMatch||!e)break;t.preventDefault(),this.appendChip(e),this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(e)break;t.stopPropagation(),this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}},s.prototype.chipKeydown=function(t){if(!this.getChipBuffer())switch(t.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0)return;t.preventDefault(),this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:t.preventDefault(),this.selectedChip<0&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:t.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0)return;t.preventDefault(),this.onFocus()}},s.prototype.getPlaceholder=function(){var t=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return t?this.placeholder:this.secondaryPlaceholder},s.prototype.removeAndSelectAdjacentChip=function(t){var n=this.getAdjacentChipIndex(t);this.removeChip(t),this.$timeout(e.bind(this,function(){this.selectAndFocusChipSafe(n)}))},s.prototype.resetSelectedChip=function(){this.selectedChip=-1},s.prototype.getAdjacentChipIndex=function(t){var e=this.items.length-1;return 0==e?-1:t==e?t-1:t},s.prototype.appendChip=function(t){this.items.indexOf(t)+1||(this.useMdOnAppend&&this.mdOnAppend&&(t=this.mdOnAppend({$chip:t})),this.items.push(t))},s.prototype.useMdOnAppendExpression=function(){this.useMdOnAppend=!0},s.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},s.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},s.prototype.removeChip=function(t){this.items.splice(t,1)},s.prototype.removeChipAndFocusInput=function(t){this.removeChip(t),this.onFocus()},s.prototype.selectAndFocusChipSafe=function(t){return this.items.length?t===this.items.length?this.onFocus():(t=Math.max(t,0),t=Math.min(t,this.items.length-1),this.selectChip(t),void this.focusChip(t)):(this.selectChip(-1),void this.onFocus())},s.prototype.selectChip=function(t){t>=-1&&t<=this.items.length?this.selectedChip=t:this.$log.warn("Selected Chip index out of bounds; ignoring.")},s.prototype.selectAndFocusChip=function(t){this.selectChip(t),-1!=t&&this.focusChip(t)},s.prototype.focusChip=function(t){this.$element[0].querySelector('md-chip[index="'+t+'"] .md-chip-content').focus()},s.prototype.configureNgModel=function(t){this.ngModelCtrl=t;var e=this;t.$render=function(){e.items=e.ngModelCtrl.$viewValue}},s.prototype.onFocus=function(){var t=this.$element[0].querySelector("input");t&&t.focus(),this.resetSelectedChip()},s.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.resetSelectedChip()},s.prototype.onInputBlur=function(){this.inputHasFocus=!1},s.prototype.configureUserInput=function(t){this.userInputElement=t;var n=t.controller("ngModel");n!=this.ngModelCtrl&&(this.userInputNgModelCtrl=n);var i=this.$scope,r=this;t.attr({tabindex:0}).on("keydown",function(t){i.$apply(e.bind(r,function(){r.inputKeydown(t)}))}).on("focus",e.bind(r,r.onInputFocus)).on("blur",e.bind(r,r.onInputBlur))},s.prototype.configureAutocomplete=function(t){t.registerSelectedItemWatcher(e.bind(this,function(t){t&&(this.appendChip(t),this.resetChipBuffer())})),this.$element.find("input").on("focus",e.bind(this,this.onInputFocus)).on("blur",e.bind(this,this.onInputBlur))},s.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},e.module("material.components.chips").directive("mdChips",c);var h='\r\n      <md-chips-wrap\r\n          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"\r\n          ng-keydown="$mdChipsCtrl.chipKeydown($event)"\r\n          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus() }"\r\n          class="md-chips">\r\n        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"\r\n            index="{{$index}}"\r\n            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index}">\r\n          <div class="md-chip-content"\r\n              tabindex="-1"\r\n              aria-hidden="true"\r\n              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"\r\n              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>\r\n          <div class="md-chip-remove-container"\r\n              md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>\r\n        </md-chip>\r\n        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"\r\n            class="md-chip-input-container"\r\n            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>\r\n        </div>\r\n      </md-chips-wrap>',a='\r\n        <input\r\n            tabindex="0"\r\n            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"\r\n            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"\r\n            ng-model="$mdChipsCtrl.chipBuffer"\r\n            ng-focus="$mdChipsCtrl.onInputFocus()"\r\n            ng-blur="$mdChipsCtrl.onInputBlur()"\r\n            ng-keydown="$mdChipsCtrl.inputKeydown($event)">',m="\r\n      <span>{{$chip}}</span>",u='\r\n      <button\r\n          class="md-chip-remove"\r\n          ng-if="!$mdChipsCtrl.readonly"\r\n          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"\r\n          type="button"\r\n          aria-hidden="true"\r\n          tabindex="-1">\r\n        <md-icon md-svg-icon="md-close"></md-icon>\r\n        <span class="md-visually-hidden">\r\n          {{$mdChipsCtrl.deleteButtonLabel}}\r\n        </span>\r\n      </button>';c.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"],e.module("material.components.chips").controller("MdContactChipsCtrl",p),p.prototype.queryContact=function(t){var n=this.contactQuery({$query:t});return this.filterSelected?n.filter(e.bind(this,this.filterSelectedContacts)):n},p.prototype.filterSelectedContacts=function(t){return-1==this.contacts.indexOf(t)},e.module("material.components.chips").directive("mdContactChips",d);var C='\r\n      <md-chips class="md-contact-chips"\r\n          ng-model="$mdContactChipsCtrl.contacts"\r\n          md-require-match="$mdContactChipsCtrl.requireMatch"\r\n          md-autocomplete-snap>\r\n          <md-autocomplete\r\n              md-menu-class="md-contact-chips-suggestions"\r\n              md-selected-item="$mdContactChipsCtrl.selectedItem"\r\n              md-search-text="$mdContactChipsCtrl.searchText"\r\n              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"\r\n              md-item-text="$mdContactChipsCtrl.mdContactName"\r\n              md-no-cache="true"\r\n              md-autoselect\r\n              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?\r\n                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">\r\n            <div class="md-contact-suggestion">\r\n              <img \r\n                  ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"\r\n                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />\r\n              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText">\r\n                {{item[$mdContactChipsCtrl.contactName]}}\r\n              </span>\r\n              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>\r\n            </div>\r\n          </md-autocomplete>\r\n          <md-chip-template>\r\n            <div class="md-contact-avatar">\r\n              <img \r\n                  ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"\r\n                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />\r\n            </div>\r\n            <div class="md-contact-name">\r\n              {{$chip[$mdContactChipsCtrl.contactName]}}\r\n            </div>\r\n          </md-chip-template>\r\n      </md-chips>';d.$inject=["$mdTheming","$mdUtil"]}(window,window.angular);